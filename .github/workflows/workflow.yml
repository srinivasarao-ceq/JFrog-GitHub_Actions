name: check_iac_vulnerabilities
on:
  push:
  workflow_dispatch:

env:
  aws-region: ap-southeast-1

jobs:
  Jfrog-configuration:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.jfrog-scan.outputs.test }}
    steps:
      - name: configure Jfrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          # JFrog platform url (for example: https://acme.jfrog.io) 
          JF_URL: ${{ secrets.JF_URL }}
          
          # Basic authentication credentials
          JF_USER: ${{ secrets.JF_USER }}
          JF_PASSWORD: ${{ secrets.JF_PASSWORD }}
       
      - name: AWS CLI configuration
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.aws-region }}
      
      - name: checkout the code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init
      
      - name: Run JFrog Scan
        id: jfrog-scan
        run: |
           jf audit --watches "demo" 


  Check_vulnerabilities:
    runs-on: ubuntu-latest
    needs: Jfrog-configuration
    steps:
      - env:
          OUTPUT1: ${{needs.Jfrog-configuration.outputs.output1}}
        run:  echo "$OUTPUT1"
          # if [ -f "$OUTPUT1" ]; then
          #   if grep -q "High/Medium" "$OUTPUT1"; then
          #       echo "Success: The word 'High/Medium' was found in '$OUTPUT1'."
          #   else
          #       echo "Failure: The word 'High/Medium' was not found in '$OUTPUT1'."
          #   fi
          # else
          #     echo "Failure: The file '$OUTPUT1' does not exist."
          # fi